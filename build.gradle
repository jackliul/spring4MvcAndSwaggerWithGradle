apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'maven'
apply plugin: 'org.akhikhl.gretty'
apply plugin: 'org.hidetake.ssh'
// apply from: rootProject.getRootDir().getAbsolutePath() + "/utils.gradle"

// https://docs.gradle.org/current/javadoc/org/gradle/api/Project.html
// https://gradle-ssh-plugin.github.io/docs/
// https://www.linuxidc.com/Linux/2018-01/150211.htm

// https://my.oschina.net/u/2450739/blog/841462 虚拟机ping不通
// http://blog.csdn.net/wqc19920906/article/details/52608460?locationNum=10&fps=1

// TODO http://blog.csdn.net/fly910905/article/details/79131755 实现静态文档的生成

import org.apache.tools.ant.filters.ReplaceTokens
group 'com.jacliu.test'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8
ext{
    env = System.getProperty("env") ?: "dev"
    realHost = System.getProperty("realHost") ?: '192.168.0.165'  
    realUser = System.getProperty("realUser") ?:'root'  
    realPassword = System.getProperty("realPassword") ?:'12345678' 
    archiveName = System.getProperty("archiveName") ?:'spring4MvcAndSwaggerWithGradle'
    toUploadDir = System.getProperty("toUploadDir") ?:'D:/deploy-softwares/' 
   
}
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}
buildscript {  
  repositories {  
  	//jcenter()  
  	mavenCentral()
    maven {  
      url "http://maven.aliyun.com/nexus/content/groups/public/"
    }  
  } 
  dependencies {  
    classpath "gradle.plugin.org.akhikhl.gretty:gretty:2.0.0" 
    classpath 'org.hidetake:gradle-ssh-plugin:2.9.0'
    classpath 'org.codehaus.groovy:groovy-backports-compat23:2.4.6'
  }  
}  
repositories {
    mavenLocal()
    mavenCentral()
}
dependencies {
	providedRuntime 'javax.servlet:jstl:1.2'
	compile 'ch.qos.logback:logback-classic:1.1.3'
	compile 'org.springframework:spring-webmvc:4.1.6.RELEASE'
	compile 'org.apache.ant:ant:1.9.5'
	compile 'com.alibaba:druid:1.1.8'
	compile 'mysql:mysql-connector-java:5.1.42'
	compile 'io.springfox:springfox-swagger2:2.6.1'
	compile 'io.springfox:springfox-swagger-ui:2.6.1'
	compile 'com.drore.cloud:swagger-bootstrap-ui:1.4'
	compile 'com.fasterxml.jackson.core:jackson-core:2.5.1'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.5.1'
	compile 'com.fasterxml.jackson.core:jackson-annotations:2.5.1'
	
	// https://mvnrepository.com/artifact/javax.servlet.jsp.jstl/jstl
	//compile group: 'javax.servlet.jsp.jstl', name: 'jstl', version: '1.2'
	
	// https://mvnrepository.com/artifact/javax.el/javax.el-api
	compile group: 'javax.el', name: 'javax.el-api', version: '3.0.0'
	
	// https://mvnrepository.com/artifact/javax.el/javax.el-api
	compile group: 'javax.el', name: 'javax.el-api', version: '3.0.0'
	
	
	// https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator
	compile group: 'org.hibernate.validator', name: 'hibernate-validator', version: '6.0.8.Final'
}
	
sourceSets {
    main {
       java {  
            srcDirs "src/main/java"
        }  
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
}

// 动态替换文件并打war包	gradle -Denv=pro build appRunDebug
def loadConfiguration() {
    def configFile = file('config.groovy') // 配置文件
    return new ConfigSlurper(env).parse(configFile.toURI().toURL()).toProperties()
}
processResources {
    from(sourceSets.main.resources.srcDirs) {
        // filter(ReplaceTokens, tokens: loadConfiguration())
        filter(ReplaceTokens, tokens: loadConfiguration(), beginToken : '${', endToken : '}')
    }
}
war{  
    webInf { from 'build/resources/main' }
    archiveName 'spring4MvcAndSwaggerWithGradle.war'
}  

// 远程上传到服务器上
ssh.settings {  
  knownHosts = allowAnyHosts  
}  

remotes {  
  	deployServer {  
	    role 'masterNode'
	    host = realHost  
	    user = realUser  
	    password = realPassword  
  }
}  

def toUploadFile = {String suf ->
	toUploadDir + suf
}

task installTools() << {
	ssh.run {
		    session(remotes.deployServer) { 
			executeScript '''
					#!/bin/sh  
		            yum -y install wget
		            yum -y install lrzsz
		            yum -y install make ncurses-devel gcc gcc-c++ unixODBC unixODBC-devel openssl openssl-devel
	                yum -y install tcl
	                yum -y install pcre*  
					yum -y install openssl*
	           '''  
	        }
       }
}

task installJdk(dependsOn: installTools) << {
	ssh.run {  
	    session(remotes.deployServer) { 
	         executeScript '''
      					#!/bin/sh  
                        rm -rf /home/jdkHome
                        mkdir /home/jdkHome
                    '''  
		      put from: toUploadDir+"jdk-8u161-linux-x64.tar.gz", into: "/home/jdkHome"
		      executeScript '''
		      			#!/bin/sh
		      			tar -zxvf /home/jdkHome/jdk-8u161-linux-x64.tar.gz -C /home/jdkHome/
		      			mv /home/jdkHome/jdk1.8.0_161 /home/jdkHome/jdk8
		      			rm -rf /home/jdkHome/jdk-8u161-linux-x64.tar.gz
		      			mv /etc/profile /etc/profile_back
		      		'''
		     put from: toUploadDir+"profile", into: "/etc/profile"
		     executeScript '''
		      			#!/bin/sh
		     			source /etc/profile
		     			java -version
		     		'''
	    }
	}
}
task installTomcat(dependsOn: installJdk) << {
	ssh.run {  
	    session(remotes.deployServer) { 
	         executeScript '''
      					#!/bin/sh  
                        rm -rf /home/tomcatHome
                        mkdir /home/tomcatHome
                    '''  
		      put from: toUploadFile("apache-tomcat-8.5.29.tar.gz"), into: "/home/tomcatHome"
		      executeScript '''
		      			#!/bin/sh
		      			//wget -P /home/tomcatHome http://mirrors.shu.edu.cn/apache/tomcat/tomcat-8/v8.5.29/bin/apache-tomcat-8.5.29.tar.gz
		      			tar -zxvf /home/tomcatHome/apache-tomcat-8.5.29.tar.gz -C /home/tomcatHome/
		      			mv /home/tomcatHome/apache-tomcat-8.5.29 /home/tomcatHome/tomcat8
		      			rm -rf /home/tomcatHome/apache-tomcat-8.5.29.tar.gz
		      			mv /home/tomcatHome/tomcat8/conf/server.xml /home/tomcatHome/tomcat8/conf/server.xml_back
		      			mv /home/tomcatHome/tomcat8/bin/startup.sh /home/tomcatHome/tomcat8/bin/startup.sh_back
		      			mv /home/tomcatHome/tomcat8/bin/setclasspath.sh /home/tomcatHome/tomcat8/bin/setclasspath.sh_back
		      		'''
		     put from: toUploadDir+"server.xml", into: "/home/tomcatHome/tomcat8/conf/server.xml"
		     put from: toUploadDir+"startup.sh", into: "/home/tomcatHome/tomcat8/bin/startup.sh"
		     put from: toUploadDir+"setclasspath.sh", into: "/home/tomcatHome/tomcat8/bin/setclasspath.sh"
		     executeScript '''
		      			#!/bin/sh
		      			chmod 777 /home/tomcatHome/tomcat8/bin/startup.sh /home/tomcatHome/tomcat8/bin/shutdown.sh
		      		'''
	    }
	}
}
task installJenkins(dependsOn: installTomcat) << {
	ssh.run {  
	    session(remotes.deployServer) { 
	         executeScript '''
      					#!/bin/sh  
                        rm -rf /home/jenkinsHome
                        mkdir /home/jenkinsHome
                        # // wget -P /home/jenkinsHome http://mirrors.jenkins.io/war-stable/latest/jenkins.war
                    '''  
            put from: toUploadFile("jenkins.war"), into: "/home/jenkinsHome"
            executeScript '''
      					#!/bin/sh  
      					nohup /home/jdkHome/jdk8/bin/java -jar /home/jenkinsHome/jenkins.war --httpPort=9090 &
      					sleep 5
      					exit
      				'''
            //execute 'nohup java -jar /home/jenkinsHome/jenkins.war --httpPort=9090 & '
	    }
	}
}
// https://blog.csdn.net/mx472756841/article/details/50733886
task installRabbitMq(dependsOn: installJenkins) << {
	ssh.run {  
		    session(remotes.deployServer) { 
		         executeScript '''
	      					#!/bin/sh
	      					rm -rf /home/rabbitMqHome
	                        mkdir /home/rabbitMqHome
	      					wget -P /home/rabbitMqHome http://erlang.org/download/otp_src_20.3.tar.gz
	      					wget -P /home/rabbitMqHome https://www.rabbitmq.com/releases/rabbitmq-server/v1.4.0/rabbitmq-server-1.4.0-1.noarch.rpm
	      					cd /home/rabbitMqHome
	      					tar -zxvf /home/rabbitMqHome/otp_src_20.3.tar.gz -C /home/rabbitMqHome/
	      					mv /home/rabbitMqHome/otp_src_20.3.tar.gz 
	      					mv /home/rabbitMqHome/otp_src_20.3 /home/rabbitMqHome/rbmq20
	      					cd /home/rabbitMqHome/rbmq20
	      					./configure
	      					make && make install  
	                    '''
	             put from: toUploadDir+"profile", into: "/etc/profile"
			     executeScript '''
			      			#!/bin/sh
				     			source /etc/profile
				     			echo $ERL_HOME
				     			rpm -i --nodeps /home/rabbitMqHome/rabbitmq-server-1.4.0-1.noarch.rpm
				     			chkconfig rabbitmq-server on
				     		'''
	    }
	}
}

// https://www.cnblogs.com/yinz/p/7065146.html
task installRedis(dependsOn: installJenkins) << {
	ssh.run {  
		    session(remotes.deployServer) { 
	        executeScript '''
	  				#!/bin/sh
	  				rm -rf /home/redisHome
	                mkdir -p /home/redisHome
	                mkdir -p /home/redisHome/redisInstall
	                
	  				wget -P /home/redisHome http://download.redis.io/releases/redis-4.0.8.tar.gz
					tar -zxvf /home/redisHome/redis-4.0.8.tar.gz -C /home/redisHome/
					rm -rf /home/redisHome/redis-4.0.8.tar.gz
					cd /home/redisHome/redis-4.0.8
				    make install PREFIX=/home/redisHome/redisInstall/ 
	            '''
	    }
	}
}

task installNginx(dependsOn: installRedis) << {
	ssh.run {  
		    session(remotes.deployServer) { 
	        executeScript '''
	  				#!/bin/sh
	  				rm -rf /home/nginxHome
	                mkdir -p /home/nginxHome
	                mkdir -p /home/nginxHome/nginxInstall
					 
	  				wget -P /home/nginxHome https://nginx.org/download/nginx-1.9.9.tar.gz
					tar -zxvf /home/nginxHome/nginx-1.9.9.tar.gz -C /home/nginxHome/
					rm -rf /home/nginxHome/nginx-1.9.9.tar.gz
					cd /home/nginxHome/nginx-1.9.9
					./configure --prefix=/home/nginxHome/nginxInstall
				    make & make install
					cd /home/nginxHome/nginxInstall
				    ./nginx
				    ps -ef | grep nginx
	            '''
	    }
	}
}
task closeThefire(dependsOn: installNginx) << {
	ssh.run {  
	    session(remotes.deployServer) { 
	         executeScript '''
      					#!/bin/sh  
                        iptables -A INPUT -p tcp --dport 80 -j ACCEPT
                        service iptables stop
                    '''  
	    }
	}
}

task initEnv(dependsOn: closeThefire)<<{
	ssh.run {  
	    session(remotes.deployServer) { 
	         executeScript '''
      					#!/bin/sh
      					chmod 777 /home/tomcatHome/tomcat8/bin/startup.sh /home/tomcatHome/tomcat8/bin/shutdown.sh   
  						ls /home/jdkHome/
  						ls /home/jdkHome/jdk8/jre
  						source /etc/profile
  						cat /etc/profile
  						echo $JAVA_HOME 
  						echo $JRE_HOME
                    '''  
	    }
	}
	println "恭喜您 jdk tomcat8 rabbitmq redis nginx jenkins 初始化已完成，接下来请您完成各自的定自化!"
}

task deploy(dependsOn: war) << { 
  ssh.run {  
    session(remotes.deployServer) {  
        execute '/home/tomcatHome/tomcat8/bin/shutdown.sh'
    	remove '/home/tomcatHome/tomcat8/webapps/'+archiveName,'/home/tomcatHome/tomcat8/webapps/'+archiveName+'.war'
		put from: buildDir.toString() + '/libs/'+archiveName+'.war', into: '/home/tomcatHome/tomcat8/webapps'
		execute '/home/tomcatHome/tomcat8/bin/startup.sh'  
    }  
  }  
}


def cmd = 'openBrowser.bat' + realHost
task openBrowser(dependsOn: deploy) << {
	def cmdResult = cmd.execute().text.trim()
}

gretty {
    httpPort = 8089
	managedClassReload = true
	reloadOnConfigChange = true
    contextPath = '/'
}
	
// 扩展上传到maven的插件	
uploadArchives {
	repositories.mavenDeployer {
	    repository(url: "http://localhost:8088/nexus/content/repositories/snapshots/") {
	        authentication(userName: "admin", password: "admin123")
	        pom.groupId = "com.juvenxu"
	        pom.artifactId = "account-captcha"
        }
    }
}